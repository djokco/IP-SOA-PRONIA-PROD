<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Wed Jan 04 15:06:31 ICT 2017
  Author:  LahirSa
  Type: BPEL 2.0 Process
  Purpose: Empty BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="CalcProniaStatus"
               targetNamespace="http://xmlns.oracle.com/IPApplication/PNCalcStatus/CalcProniaStatus"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/IPApplication/PNCalcStatus/CalcProniaStatus"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/db/IPApplication/PNCalcStatus/dbCalcStatus"
         xmlns:ui="http://xmlns.oracle.com/soa/designer" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:ess="http://xmlns.oracle.com/scheduler"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns2="http://www.ibm.com/maximo/wsdl/OracleBI_PNCALCInterface"
         xmlns:ns3="http://oracle.com/sca/soapservice/IP-MW-SOA/EBSSendMailNotification/EBSSendMailNotification"
         xmlns:ns4="http://oracle.com/sca/soapservice/IP-MW-SOA/EBSLogFileUtility/EBSLogFileUtility"
         xmlns:ns5="http://soa.indonesiapower.co.id/schema/calcproniastatus"
         xmlns:ns6="http://soa.indonesiapower.co.id/schema/fault"
         xmlns:ns7="http://xmlns.oracle.com/pcbpel/adapter/db/IPApplication/PNCalcStatus/dbUpdateCalcStatus"
         xmlns:ns8="http://ebs.indonesiapower.co.id/shema/log" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:ns10="http://www.ibm.com/maximo" xmlns:ns9="http://xmlns.oracle.com/pcbpel/adapter/db/top/dbCalcStatus"
         xmlns:ns11="http://ebs.indonesiapower.co.id/SendMailNotification"
         xmlns:ns12="http://xmlns.oracle.com/pcbpel/adapter/db/top/dbUpdateCalcStatus"
         xmlns:ns13="http://xmlns.oracle.com/pcbpel/adapter/db/IPApplication/PNCalcStatus/UpdateStatusDb"
         xmlns:ns14="http://xmlns.oracle.com/pcbpel/adapter/db/IPApplication/PNCalcStatus/updateStatusdbFail">

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <import namespace="http://soa.indonesiapower.co.id/schema/fault" location="../Schemas/fault.xsd"
          importType="http://www.w3.org/2001/XMLSchema"/>
  <import namespace="http://soa.indonesiapower.co.id/schema/calcproniastatus" location="../Schemas/calcproniastatus.xsd"
          importType="http://www.w3.org/2001/XMLSchema"/>
  <import namespace="http://xmlns.oracle.com/pcbpel/adapter/db/IPApplication/PNCalcStatus/dbCalcStatus"
          location="../WSDLs/dbCalcStatus.wsdl" importType="http://schemas.xmlsoap.org/wsdl/" ui:processWSDL="true"/>
  <partnerLinks>
    <partnerLink name="dbCalcStatus" partnerLinkType="ns1:dbCalcStatus_plt" myRole="dbCalcStatus_role"/>
    <partnerLink name="OracleBI_PNCALCInterfaceStatus" partnerLinkType="ns2:OracleBI_PNCALCInterfaceStatus"
                 partnerRole="OracleBI_PNCALCInterfacePortType"/>
    <partnerLink name="EBSSendMailNotification" partnerLinkType="ns3:EBSSendMailNotification"
                 partnerRole="execute_ptt"/>
    <partnerLink name="EBSLogFileUtility" partnerLinkType="ns4:EBSLogFileUtility" partnerRole="writeLog_ptt"/>
    <partnerLink name="UpdateStatusDb" partnerLinkType="ns13:UpdateStatusDb_plt" partnerRole="UpdateStatusDb_role"/>
    <partnerLink name="updateStatusdbFail" partnerLinkType="ns14:updateStatusdbFail_plt"
                 partnerRole="updateStatusdbFail_role"/>
  </partnerLinks>
  <variables>
    <variable name="InputVariable" messageType="ns1:Pronia3CalcStatusCollection_msg"/>
    <variable name="ServiceName" type="xsd:string"/>
    <variable name="StartDateTime" type="xsd:dateTime"/>
    <variable name="Response" element="ns5:ResponseCalcproniastatus"/>
    <variable name="fault" element="ns6:fault"/>
    <variable name="InvokePNCalcMaximo_SyncPNCALC_InputVariable" messageType="ns2:SyncPNCALCRequest"/>
    <variable name="InvokePNCalcMaximo_SyncPNCALC_OutputVariable" messageType="ns2:SyncPNCALCResponse"/>
    <variable name="Invoke_EBSLogFileUtility_writeLog_InputVariable" messageType="ns4:requestMessage"/>
    <variable name="Invoke_EBSLogFileUtility_writeLog_OutputVariable" messageType="ns4:replyMessage"/>
    <variable name="Invoke_EBSSendMailNotification_execute_InputVariable" messageType="ns3:requestMessage"/>
    <variable name="Invoke_EBSSendMailNotification_execute_OutputVariable" messageType="ns3:replyMessage"/>
    <variable name="InvokeDbStatusUpdateFail_update_InputVariable" messageType="ns13:Pronia3CalcStatusCollection_msg"/>
    <variable name="InvokeDbUpdateStatusSuccess_update_InputVariable"
              messageType="ns13:Pronia3CalcStatusCollection_msg"/>
    <variable name="InvokeDbStatusUpdateFail_update_InputVariable_1"
              messageType="ns14:Pronia3CalcStatusCollection_msg"/>
    <variable name="InvokeUpdateStatus_success_update_InputVariable"
              messageType="ns14:Pronia3CalcStatusCollection_msg"/>
  </variables>
  <sequence name="main">
    <receive name="Receive" partnerLink="dbCalcStatus" portType="ns1:dbCalcStatus_ptt" operation="receive"
             variable="InputVariable" createInstance="yes"/>
    <assign name="ServiceName">
      <copy>
        <from>'PNCalcStatus'</from>
        <to>$ServiceName</to>
      </copy>
      <copy>
        <from>xp20:current-dateTime()</from>
        <to>$StartDateTime</to>
      </copy>
    </assign>
    <scope name="Scope1">
      <faultHandlers>
        <catchAll>
          <sequence name="Sequence4">
            <assign name="Assign_Fault">
              <copy>
                <from>substring-before(substring-after(ora:getFaultAsString(), "&lt;code&gt;"), "&lt;/code&gt;")</from>
                <to>$fault/ns6:code</to>
              </copy>
              <copy>
                <from>substring-before(substring-after(ora:getFaultAsString(),'&lt;detail&gt;'),'&lt;/detail&gt;')</from>
                <to>$fault/ns6:details</to>
              </copy>
              <copy>
                <from>substring-before(substring-after(ora:getFaultAsString(),'&lt;summary&gt;'),'&lt;/summary&gt;')</from>
                <to>$fault/ns6:summary</to>
              </copy>
            </assign>
            <assign name="Assign_Response">
              <copy>
                <from>$fault/ns6:code</from>
                <to>$Response/ns5:response/ns5:ErrorCode</to>
              </copy>
              <copy>
                <from>$fault/ns6:summary</from>
                <to>$Response/ns5:response/ns5:ErrorMessage</to>
              </copy>
            </assign>
            <sequence name="Sequence5">
              <assign name="XQTransform3">
                <bpelx:annotation>
                  <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                </bpelx:annotation>
                <copy>
                  <from>ora:processXQuery10('../Transformations/T_failUpdateStatusDb.xqy', 'InputVariable.Pronia3CalcStatusCollection', $InputVariable.Pronia3CalcStatusCollection, 'fault', $fault)</from>
                  <to variable="InvokeDbStatusUpdateFail_update_InputVariable_1" part="Pronia3CalcStatusCollection"/>
                </copy>
              </assign>
              <invoke name="InvokeDbStatusUpdateFail"
                      inputVariable="InvokeDbStatusUpdateFail_update_InputVariable_1" bpelx:invokeAsDetail="no"
                      partnerLink="updateStatusdbFail" portType="ns14:updateStatusdbFail_ptt" operation="update"/>
            </sequence>
            <sequence name="Sequence6">
              <assign name="Assign_EBSSendMailNotification">
                <copy>
                  <from>concat('Nama Service :',"&amp;#13;",concat(ora:getFlowId(),' - ',normalize-space($ServiceName)),"&amp;#13;","&amp;#13;",'Input Request :',"&amp;#13;",normalize-space(ora:toCDATA($InputVariable.Pronia3CalcStatusCollection)), "&amp;#13;", "&amp;#13;",'Output Response :',"&amp;#13;",normalize-space(ora:toCDATA($Response)), "&amp;#13;", "&amp;#13;",'Fault :',"&amp;#13;",normalize-space(ora:toCDATA(ora:getFaultAsXML())))</from>
                  <to>$Invoke_EBSSendMailNotification_execute_InputVariable.payload/ns11:InputString</to>
                </copy>
              </assign>
              <invoke name="Invoke_EBSSendMailNotification" bpelx:invokeAsDetail="no"
                      partnerLink="EBSSendMailNotification" portType="ns3:execute_ptt" operation="execute"
                      inputVariable="Invoke_EBSSendMailNotification_execute_InputVariable"
                      outputVariable="Invoke_EBSSendMailNotification_execute_OutputVariable"/>
            </sequence>
            <sequence name="Sequence7"><assign name="Assign_EBSLogFileUtility"
                                                                       xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
      
      
   <copy>
         <from>$ServiceName</from>
         <to>$Invoke_EBSLogFileUtility_writeLog_InputVariable.input_msg/ns8:serviceName</to>
      </copy><copy>
         <from>concat('IP-MW-SOA',' || ',ora:getFlowId(),' || ','Start Process ',$ServiceName,' --&gt; Request Payload = ',normalize-space(ora:toCDATA($InputVariable.Pronia3CalcStatusCollection)),' || ', 'Request ',$ServiceName,': ','Payload = ',normalize-space(ora:toCDATA($InvokePNCalcMaximo_SyncPNCALC_InputVariable.parameters)),' || ','Response ',$ServiceName,': ','Payload = ',normalize-space(ora:toCDATA($InvokePNCalcMaximo_SyncPNCALC_OutputVariable.parameters)),' || ','End Process ',$ServiceName,'. Total time executed ',round((xp20:seconds-from-dateTime((xp20:current-dateTime()))-xp20:seconds-from-dateTime($StartDateTime))*1000),' millis.')</from>
         <to>$Invoke_EBSLogFileUtility_writeLog_InputVariable.input_msg/ns8:message</to>
      </copy><copy>
         <from>'ERROR'</from>
         <to>$Invoke_EBSLogFileUtility_writeLog_InputVariable.input_msg/ns8:level</to>
      </copy></assign><invoke name="Invoke_EBSLogFileUtility" partnerLink="EBSLogFileUtility"
                      portType="ns4:writeLog_ptt" operation="writeLog"
                      inputVariable="Invoke_EBSLogFileUtility_writeLog_InputVariable" bpelx:invokeAsDetail="no"
                              outputVariable="Invoke_EBSLogFileUtility_writeLog_OutputVariable"/>
            </sequence>
            <exit name="Exit"/>
          </sequence>
        </catchAll>
      </faultHandlers>
      <sequence name="Sequence1">
        <assign name="T_InsertStatus">
          <bpelx:annotation>
            <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
          </bpelx:annotation>
          <copy>
            <from>ora:doXSLTransformForDoc("../Transformations/T_insertStatus.xsl", $InputVariable.Pronia3CalcStatusCollection)</from>
            <to variable="InvokePNCalcMaximo_SyncPNCALC_InputVariable" part="parameters"/>
          </copy>
        </assign>
        <invoke name="InvokePNCalcMaximo" partnerLink="OracleBI_PNCALCInterfaceStatus"
                portType="ns2:OracleBI_PNCALCInterfacePortType" operation="SyncPNCALC"
                inputVariable="InvokePNCalcMaximo_SyncPNCALC_InputVariable"
                outputVariable="InvokePNCalcMaximo_SyncPNCALC_OutputVariable" bpelx:invokeAsDetail="no"/>
      </sequence>
    </scope>
    <scope name="Scope2">
      <sequence name="Sequence2">
        <assign name="AssignResponse">
          <copy>
            <from>'0000'</from>
            <to>$Response/ns5:response/ns5:ErrorCode</to>
          </copy>
          <copy>
            <from>'SUCCESS'</from>
            <to>$Response/ns5:response/ns5:ErrorMessage</to>
          </copy>
        </assign>
        <sequence name="Sequence2">
          <assign name="XQTransformUpdateStatus">
            <bpelx:annotation>
              <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
            </bpelx:annotation>
            <copy>
              <from>ora:processXQuery10('../Transformations/T_successUpdateStatus.xqy', 'InputVariable.Pronia3CalcStatusCollection', $InputVariable.Pronia3CalcStatusCollection, 'Response', $Response)</from>
              <to variable="InvokeDbUpdateStatusSuccess_update_InputVariable" part="Pronia3CalcStatusCollection"/>
            </copy>
          </assign>
          <assign name="TransformationUpdateSuccess">
            <bpelx:skipCondition>true()</bpelx:skipCondition>
            <bpelx:annotation>
              <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
            </bpelx:annotation>
            <copy>
              <from>ora:doXSLTransformForDoc("../Transformations/Transformation_UpdateStatusSuccess.xsl", $InputVariable.Pronia3CalcStatusCollection, "Response", $Response)</from>
              <to variable="InvokeDbUpdateStatusSuccess_update_InputVariable" part="Pronia3CalcStatusCollection"/>
            </copy>
          </assign>
          <invoke name="InvokeDbUpdateStatusSuccess" partnerLink="UpdateStatusDb"
                  portType="ns13:UpdateStatusDb_ptt" operation="update"
                  inputVariable="InvokeDbUpdateStatusSuccess_update_InputVariable" bpelx:invokeAsDetail="no"/>
        </sequence>
        <sequence name="UpdateStatus_Success">
          <bpelx:skipCondition>true()</bpelx:skipCondition>
          <assign name="XQTransformSuccess">
            <bpelx:skipCondition>true()</bpelx:skipCondition>
            <bpelx:annotation>
              <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
            </bpelx:annotation>
            <copy>
              <from>ora:processXQuery10('../Transformations/Transformation_DBUpdateSuccess.xqy', 'InputVariable.Pronia3CalcStatusCollection', $InputVariable.Pronia3CalcStatusCollection, 'Response', $Response)</from>
              <to variable="InvokeUpdateStatus_success_update_InputVariable" part="Pronia3CalcStatusCollection"/>
            </copy>
          </assign>
          <invoke name="InvokeUpdateStatus_success" partnerLink="updateStatusdbFail"
                  portType="ns14:updateStatusdbFail_ptt" operation="update"
                  inputVariable="InvokeUpdateStatus_success_update_InputVariable" bpelx:invokeAsDetail="no">
            <bpelx:skipCondition>true()</bpelx:skipCondition>
          </invoke>
        </sequence>
        <sequence name="Sequence3">
          <assign name="Assign_EBSLogFileUtility">
            <copy>
              <from>$ServiceName</from>
              <to>$Invoke_EBSLogFileUtility_writeLog_InputVariable.input_msg/ns8:serviceName</to>
            </copy>
            <copy>
              <from>concat('IP-MW-SOA',' || ',ora:getFlowId(),' || ','Start Process ',$ServiceName,' --&gt; Request Payload = ',normalize-space(ora:toCDATA($InputVariable.Pronia3CalcStatusCollection)),' || ', 'Request ',$ServiceName,': ','Payload = ',normalize-space(ora:toCDATA($InvokePNCalcMaximo_SyncPNCALC_InputVariable.parameters)),' || ','Response ',$ServiceName,': ','Payload = ',normalize-space(ora:toCDATA($InvokePNCalcMaximo_SyncPNCALC_OutputVariable.parameters)),' || ','End Process ',$ServiceName,'. Total time executed ',round((xp20:seconds-from-dateTime((xp20:current-dateTime()))-xp20:seconds-from-dateTime($StartDateTime))*1000),' millis.')</from>
              <to>$Invoke_EBSLogFileUtility_writeLog_InputVariable.input_msg/ns8:message</to>
            </copy>
            <copy>
              <from>'INFO'</from>
              <to>$Invoke_EBSLogFileUtility_writeLog_InputVariable.input_msg/ns8:level</to>
            </copy>
          </assign>
          <invoke name="Invoke_EBSLogFileUtility" partnerLink="EBSLogFileUtility"
                  portType="ns4:writeLog_ptt" operation="writeLog"
                  inputVariable="Invoke_EBSLogFileUtility_writeLog_InputVariable"
                  outputVariable="Invoke_EBSLogFileUtility_writeLog_OutputVariable" bpelx:invokeAsDetail="no"/>
        </sequence>
      </sequence>
    </scope>
  </sequence>
</process>